var $url="/pages/plugins/install",$pluginIds=pageUtils.getQueryStringByName("pluginIds").split(","),$pageType="true"===pageUtils.getQueryStringByName("isUpdate")?"升级":"安装",data={pluginIds:$pluginIds,pageLoad:!1,pageAlert:null,pageType:$pageType,pageStep:1,isNightly:!1,pluginVersion:null,downloadPlugins:null,listPackages:[],listPackageIds:[],listIndex:0,currentPackage:{},currentPackages:[],currentDownloadingId:0,currentDownloadIds:[],currentUpdatingId:0,currentUpdatedIds:[]},methods={getConfig:function(){var e=this;$api.get($url+"/config").then(function(t){var a=t.data;e.isNightly=a.isNightly,e.pluginVersion=a.pluginVersion,e.downloadPlugins=a.downloadPlugins,e.getPackages()}).catch(function(t){e.pageAlert=utils.getPageAlert(t)})},getPackages:function(){var e=this;$apiCloud.get("updates",{params:{isNightly:e.isNightly,pluginVersion:e.pluginVersion,packageIds:e.pluginIds.join(",")}}).then(function(t){for(var a=t.data,i=0;i<a.value.length;i++){for(var n=a.value[i],s=0;s<n.pluginReferences.length;s++){var d=n.pluginReferences[s];-1===e.listPackageIds.indexOf(d.id)&&(e.listPackageIds.push(d.id),e.listPackages.push({id:d.id,version:d.version,packageType:"Plugin"}))}for(var r=0;r<n.libraryReferences.length;r++){d=n.libraryReferences[r];-1===e.listPackageIds.indexOf(d.id)&&(e.listPackageIds.push(d.id),e.listPackages.push({id:d.id,version:d.version,packageType:"Library"}))}-1===e.listPackageIds.indexOf(n.pluginId)&&(e.listPackageIds.push(d.id),e.listPackages.push({id:n.pluginId,version:n.version,packageType:"Plugin"}))}e.installListPackage()}).catch(function(t){e.pageAlert=utils.getPageAlert(t)}).then(function(){e.pageLoad=!0})},installListPackage:function(){this.listIndex!==this.listPackages.length?(this.package=this.listPackages[this.listIndex],this.currentPackages.push(this.package),this.download()):this.clearCache()},download:function(){for(var e=0;e<this.currentPackages.length;e++){var t=this.currentPackages[e];if(-1==this.currentDownloadIds.indexOf(t.id))return this.currentDownloadingId=t.id,void this.downloadPackage(t.id,t.version)}this.update()},downloadPackage:function(e,t){var a=this;$api.post($url+"/download",{packageId:e,version:t}).then(function(t){t.data;a.currentDownloadingId=0,a.currentDownloadIds.push(e),a.download()}).catch(function(e){a.pageAlert=utils.getPageAlert(e)})},update:function(){this.pageStep=2;for(var e=0;e<this.currentPackages.length;e++){var t=this.currentPackages[e];if(-1==this.currentUpdatedIds.indexOf(t.id))return this.currentUpdatingId=t.id,void this.updatePackage(t.id,t.version,t.packageType)}this.updateSuccess()},updatePackage:function(e,t,a){var i=this;$api.post($url+"/update",{packageId:e,version:t,packageType:a}).then(function(t){t.data;i.currentUpdatingId=0,i.currentUpdatedIds.push(e),i.update()}).catch(function(e){i.pageAlert=utils.getPageAlert(e)})},updateSuccess:function(){this.listIndex++,this.pageStep=1,this.currentPackage={},this.currentPackages=[],this.currentDownloadingId=0,this.currentDownloadIds=[],this.currentUpdatingId=0,this.currentUpdatedIds=[],this.installListPackage()},clearCache:function(){var e=this;e.pageStep=0,$api.post($url+"/cache").then(function(e){e.data;setTimeout(function(){window.top.location.reload(!0)},3e3)}).catch(function(t){e.pageAlert=utils.getPageAlert(t)})}},$vue=new Vue({el:"#main",data:data,methods:methods,created:function(){this.getConfig()}});